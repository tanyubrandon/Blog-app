{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const abortCont = new AbortController();\n    setTimeout(() => {\n      fetch(url, {\n        signal: abortCont.signal\n      }).then(res => {\n        if (!res.ok) {\n          throw Error(\"A fatal error occured!\");\n        }\n\n        ;\n        return res.json();\n      }).then(data => {\n        if (e.name = '') setData(data);\n        setIsPending(false);\n      }).catch(e => {\n        setError(e.message);\n        setIsPending(false);\n      });\n    }, 1000);\n    return () => abortCont.abort();\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n\n_s(useFetch, \"cXWu45hQE9y6Of2sqlY9XSRohsk=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/home/tanyu/Documents/tuts/dojo-blog/src/useFetch.js"],"names":["useState","useEffect","useFetch","url","data","setData","isPending","setIsPending","error","setError","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","e","name","catch","message","abort"],"mappings":";;AAAA,SAASA,QAAT,EAAkBC,SAAlB,QAAmC,OAAnC;;AAEA,MAAMC,QAAQ,GAAEC,GAAD,IAAO;AAAA;;AAElB,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAeL,QAAQ,CAAC,IAAD,CAA7B;AAEA,QAAK,CAACM,SAAD,EAAWC,YAAX,IAAyBP,QAAQ,CAAC,IAAD,CAAtC;AAEA,QAAK,CAACQ,KAAD,EAAOC,QAAP,IAAiBT,QAAQ,CAAC,IAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMS,SAAS,GAAC,IAAIC,eAAJ,EAAhB;AACAC,IAAAA,UAAU,CAAC,MAAI;AACXC,MAAAA,KAAK,CAACV,GAAD,EAAK;AAACW,QAAAA,MAAM,EAACJ,SAAS,CAACI;AAAlB,OAAL,CAAL,CACCC,IADD,CACMC,GAAG,IAAE;AACP,YAAG,CAACA,GAAG,CAACC,EAAR,EAAW;AACP,gBAAMC,KAAK,CAAC,wBAAD,CAAX;AACH;;AAAA;AACF,eAAQF,GAAG,CAACG,IAAJ,EAAR;AACF,OAND,EAOCJ,IAPD,CAOMX,IAAI,IAAE;AACR,YAAGgB,CAAC,CAACC,IAAF,GAAO,EAAV,EACChB,OAAO,CAACD,IAAD,CAAP;AACAG,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACJ,OAXD,EAYCe,KAZD,CAYQF,CAAD,IAAK;AACRX,QAAAA,QAAQ,CAACW,CAAC,CAACG,OAAH,CAAR;AACAhB,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,OAfD;AAgBH,KAjBS,EAiBR,IAjBQ,CAAV;AAmBA,WAAO,MAAIG,SAAS,CAACc,KAAV,EAAX;AACH,GAtBQ,EAsBP,CAACrB,GAAD,CAtBO,CAAT;AAwBA,SAAO;AAACC,IAAAA,IAAD;AAAME,IAAAA,SAAN;AAAgBE,IAAAA;AAAhB,GAAP;AACH,CAjCD;;GAAMN,Q;;AAmCN,eAAeA,QAAf","sourcesContent":["import { useState,useEffect } from \"react\";\n\nconst useFetch=(url)=>{\n\n    const [data,setData]=useState(null);\n\n    const[isPending,setIsPending]=useState(true);\n\n    const[error,setError]=useState(null);\n    \n    useEffect(()=>{\n        const abortCont=new AbortController();\n        setTimeout(()=>{\n            fetch(url,{signal:abortCont.signal})\n            .then(res=>{\n                if(!res.ok){\n                    throw Error(\"A fatal error occured!\");\n                };\n               return  res.json();\n            })\n            .then(data=>{\n                if(e.name='')\n                 setData(data);   \n                 setIsPending(false);\n            })\n            .catch((e)=>{\n                setError(e.message);\n                setIsPending(false);\n            });\n        },1000);   \n\n        return ()=>abortCont.abort();\n    },[url]);\n\n    return {data,isPending,error}\n};\n\nexport default useFetch;"]},"metadata":{},"sourceType":"module"}